<div>
  <h1 class="title">Catálogo de Productos</h1>
  
  <!-- Filtros de productos -->
  <div class="filters">
    <form action="/products" method="GET" class="filter-form">
      <div class="filter-item">
        <label for="limit">Productos por página</label>
        <select name="limit" id="limit" class="filter-select">
          <option value="10" {{#if (eq limit 10)}}selected{{/if}}>10</option>
          <option value="20" {{#if (eq limit 20)}}selected{{/if}}>20</option>
          <option value="50" {{#if (eq limit 50)}}selected{{/if}}>50</option>
        </select>
      </div>
      <div class="filter-item">
        <label for="sort">Ordenar por precio</label>
        <select name="sort" id="sort" class="filter-select">
          <option value="">Sin ordenar</option>
          <option value="asc" {{#if (eq sort "asc")}}selected{{/if}}>Menor a mayor</option>
          <option value="desc" {{#if (eq sort "desc")}}selected{{/if}}>Mayor a menor</option>
        </select>
      </div>
      <div class="filter-item">
        <label for="query">Filtrar por categoría</label>
        <input type="text" class="filter-input" id="query" name="query" value="{{query}}">
      </div>
      <div class="filter-item">
        <button type="submit" class="filter-btn">Aplicar filtros</button>
      </div>
    </form>
  </div>
  
  <!-- Lista de productos -->
  <div class="product-list">
    {{#each products}}
    <div class="product-card-2">
      {{#if thumbnails.length}}
        <img src="{{thumbnails.[0]}}" class="product-thumbnail" alt="{{title}}">
      {{/if}}
      <div class="product-info">
        <h5 class="product-title">{{title}}</h5>
        <p class="product-description">{{description}}</p>
        <p><strong>Categoría:</strong> {{category}}</p>
        <p><strong>Precio:</strong> ${{price}}</p>
        <p><strong>Stock:</strong> {{stock}}</p>
        <div class="product-actions">
          <button class="product-btn" onclick="window.location.href='/products/{{_id}}'">Ver detalles</button>

          {{#if ../cartId}}
          <input type="number" class="quantity-input" id="quantity-{{_id}}" placeholder="Cantidad" min="1" max="{{stock}}" value="1">
          <button class="product-btn add-to-cart" data-product-id="{{_id}}" data-cart-id="{{../cartId}}">
            Agregar al carrito
          </button>
          {{/if}}
        </div>
      </div>
    </div>
    {{/each}}
  </div>

  <!-- Paginación -->
  <div class="pagination">
    <nav>
      <ul class="pagination-list">
        {{#if hasPrevPage}}
        <li class="page-item">
          <a class="page-link" href="?page={{prevPage}}&limit={{limit}}&sort={{sort}}&query={{query}}" aria-label="Anterior">
            <span>&laquo;</span>
          </a>
        </li>
        {{else}}
        <li class="page-item disabled">
          <span class="page-link">&laquo;</span>
        </li>
        {{/if}}

        <li class="page-item active">
          <span class="page-link">Página {{page}} de {{totalPages}}</span>
        </li>

        {{#if hasNextPage}}
        <li class="page-item">
          <a class="page-link" href="?page={{nextPage}}&limit={{limit}}&sort={{sort}}&query={{query}}" aria-label="Siguiente">
            <span>&raquo;</span>
          </a>
        </li>
        {{else}}
        <li class="page-item disabled">
          <span class="page-link">&raquo;</span>
        </li>
        {{/if}}
      </ul>
    </nav>
  </div>
</div>

{{#if cartId}}
<script>
document.addEventListener('DOMContentLoaded', function () {
  const addToCartButtons = document.querySelectorAll('.add-to-cart');
  addToCartButtons.forEach(button => {
    button.addEventListener('click', async function () {
      const productId = this.dataset.productId;
      const cartId = this.dataset.cartId;
      const quantityInput = document.getElementById(`quantity-${productId}`);
      const quantity = parseInt(quantityInput.value);

      if (!quantity || quantity < 1) {
        return alert('Ingresa una cantidad válida');
      }

      const originalText = this.innerText;
      this.innerText = 'Agregando...';
      this.disabled = true;

      try {
        const response = await fetch(`/api/carts/${cartId}/products/${productId}`, {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ quantity })
        });
        const result = await response.json();
        if (response.ok) {
          this.innerText = '✓ Agregado';
          setTimeout(() => {
            this.innerText = originalText;
            this.disabled = false;
          }, 2000);
        } else {
          alert(`Error: ${result.message}`);
          this.innerText = originalText;
          this.disabled = false;
        }
      } catch (error) {
        alert('Error al agregar el producto al carrito');
        console.error(error);
        this.innerText = originalText;
        this.disabled = false;
      }
    });
  });
});
</script>
{{/if}}


{{#if cartId}}
<div style="text-align: center; margin-top: 40px;">
  <button id="purchase-btn" class="product-btn" style="font-size: 1.1rem; padding: 10px 20px;">Finalizar compra</button>
</div>

<script>
document.getElementById('purchase-btn').addEventListener('click', async () => {
  const cartId = "{{cartId}}";
  try {
    const response = await fetch(`/api/carts/${cartId}/purchase`, {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' }
    });
    const result = await response.json();
    if (response.ok) {
      alert('Compra completada con éxito. Ticket enviado por correo.');
      window.location.reload();
    } else {
      alert('Error al finalizar la compra: ' + result.message);
    }
  } catch (error) {
    console.error('Error en la compra:', error);
    alert('Error en el proceso de compra');
  }
});
</script>
{{/if}}
